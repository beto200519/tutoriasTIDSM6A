var LlaveAuth=function(){"use strict";var e,t;!function(e){e.OAUTH_CODE_VERIFIER="oauth_code_verifier",e.ACCESS_TOKEN="access_token",e.REFRESH_TOKEN="refresh_token",e.ID_TOKEN="id_token",e.USER_DATA="user_data"}(e||(e={}));class r{set codeVerifier(t){localStorage.setItem(e.OAUTH_CODE_VERIFIER,t)}get codeVerifier(){return localStorage.getItem(e.OAUTH_CODE_VERIFIER)||""}set accessToken(t){localStorage.setItem(e.ACCESS_TOKEN,t)}get accessToken(){return localStorage.getItem(e.ACCESS_TOKEN)||""}set refreshToken(t){localStorage.setItem(e.REFRESH_TOKEN,t)}get refreshToken(){return localStorage.getItem(e.REFRESH_TOKEN)||""}set idToken(t){localStorage.setItem(e.ID_TOKEN,t)}get idToken(){return localStorage.getItem(e.ID_TOKEN)||""}set userData(t){localStorage.setItem(e.USER_DATA,t)}get userData(){return localStorage.getItem(e.USER_DATA)||""}clearLocalStorage(){for(const t in e)localStorage.removeItem(e[t])}}class o{static async generateOAUTHCodes(){const e=this.generateCodeOAUTH2(43),t=this.generateCodeOAUTH2(16,!1),o=this.generateCodeOAUTH2(16,!1),n=await this.generateCodeChallenge(e);return(new r).codeVerifier=e,{code_challenge:n,code_verifier:e,state:t,nonce:o}}static generateCodeOAUTH2(e,t=!0){let r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";t&&(r+="-._~");const o=new Uint8Array(e);crypto.getRandomValues(o);let n="";for(let e=0;e<o.length;e++)n+=r[o[e]%r.length];return n}static async generateCodeChallenge(e){const t=(new TextEncoder).encode(e);return crypto.subtle.digest("SHA-256",t).then((e=>{const t=Array.from(new Uint8Array(e));return btoa(String.fromCharCode(...t)).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")})).catch((e=>(console.error("Error generating code challenge:",e),"")))}}!function(e){e.AUTHORIZATION_CODE="authorization_code",e.REFRESH_TOKEN="refresh_token"}(t||(t={}));return class{constructor(e){this.configurationUrlProduction="https://llave.sonora.gob.mx/discovery/openid-configuration",this.configurationUrlTesting="https://qa-2.sonora.gob.mx/discovery/openid-configuration",this.openIdConfigurationUrl="",this.version="2.0.0",this.openIdConfigurationUrl=e.testingMode?this.configurationUrlTesting:this.configurationUrlProduction,this.storage=new r,this.codeChallengeMethod=e.codeChallengeMethod||"S256",this.redirectUrl=e.redirectUrl,this.clientId=e.clientId}async createClient(){try{if(!this.openIdConfigurationUrl.trim())throw new Error("Invalid openid configuration url.");const e=await fetch(this.openIdConfigurationUrl);this.openIdConfigurationData=await e.json()}catch(e){if(e instanceof Error)throw new Error(e.message);throw new Error("Error in create client.")}}async loginWithRedirect(){if(!this.redirectUrl.trim())throw new Error("Invalid redirect url.");const{state:e,code_challenge:t,nonce:r}=await o.generateOAUTHCodes(),n=encodeURIComponent(this.redirectUrl);location.href=`${this.openIdConfigurationData.authorization_endpoint}?client_id=${this.clientId}&redirect_uri=${n}&state=${e}&code_challenge=${t}&code_challenge_method=${this.codeChallengeMethod}&nonce=${r}`}async getToken(e){let r=e||"";if(!r.trim()){if(r=new URLSearchParams(window.location.search).get("code")||"",!r.trim())throw new Error("Invalid code.")}const o=this.storage.codeVerifier||"";if(!o.trim())throw new Error("Invalid code verifier.");const n={code:r,code_verifier:o,grant_type:t.AUTHORIZATION_CODE,client_id:this.clientId},a=await this.fetchTokenData(n);200===a.status&&(this.storage.accessToken=a.data.access_token,this.storage.refreshToken=a.data.refresh_token,this.storage.idToken=a.data.id_token)}async renewRefreshToken(){try{const e=this.storage.refreshToken;if(!e.trim())throw new Error("Invalid refresh token.");const r={grant_type:t.REFRESH_TOKEN,client_id:this.clientId,refresh_token:e},o=await this.fetchTokenData(r);200===o.status?(this.storage.accessToken=o.data.access_token,this.storage.refreshToken=o.data.refresh_token):this.storage.clearLocalStorage()}catch(e){if(e instanceof Error)throw new Error(e.message);throw new Error("Error in renew refresh token.")}}async fetchTokenData(e){try{const t={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)};if(!this.openIdConfigurationData.authorization_endpoint.trim())throw new Error("Invalid openid configuration data authorization endpoint.");const r=await fetch(this.openIdConfigurationData.token_endpoint,t);if(!r.ok)throw new Error("Error in fetch auth token data.");const o=await r.json();return{status:r.status,data:o}}catch(e){if(e instanceof Error)throw new Error(e.message);throw new Error("Error in fetch token data.")}}async getUserInfo(){try{const e=this.storage.accessToken;if(!e.trim())throw new Error("Invalid access token.");const t={method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}},r=await fetch(this.openIdConfigurationData.userinfo_endpoint,t);if(!r.ok)throw new Error("Error in fetch user info.");const o=await r.json(),n=o.data??o;return this.storage.userData=JSON.stringify(n),n}catch(e){if(e instanceof Error)throw new Error(e.message);throw new Error("Error in get user.")}}async isAuthenticated(){try{if((await this.getUserInfo()).id)return!0}catch(e){try{return await this.renewRefreshToken(),this.isAuthenticated()}catch(e){}}return!1}logOut(){this.storage.clearLocalStorage()}}}();
